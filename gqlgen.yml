# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - schema/schema.graphql

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: models

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph
  package: graph

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: turn off to make struct-type struct fields not use pointers
# e.g. type Thing struct { FieldA OtherThing } instead of { FieldA *OtherThing }
# struct_fields_always_pointers: true

# Optional: turn off to make resolvers return values instead of pointers for structs
# resolvers_always_return_pointers: true

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:

models:
  User:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.User
    fields:
      meetups:
        resolver: true
  Place:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Place
  Article:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Article
    fields:
      author:
        resolver: true
  Stadium:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Stadium
    fields:
      place:
        resolver: true
  Staff:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Staff
    fields:
      user:
        resolver: true
  Team:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Team
    fields:
      headCoach:
        resolver: true
      place:
        resolver: true
      coaches:
        resolver: true
  Training:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Training
    fields:
      headCoach:
        resolver: true
      stadium:
        resolver: true
      team:
        resolver: true
      coaches:
        resolver: true
  Creator:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Creator
    fields:
      user:
        resolver: true
  Student:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Student
    fields:
      teams:
        resolver: true
      creators:
        resolver: true
  StudentVisit:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.StudentVisit
    fields:
      training:
        resolver: true
      student:
        resolver: true
  MoneyMove:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.MoneyMove
    fields:
      owner:
        resolver: true
      student:
        resolver: true
      user:
        resolver: true
  MoneyCost:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.MoneyCost
    fields:
      staff:
        resolver: true
  CoachPaymentByMonth:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.CoachPaymentByMonth
    fields:
      coach:
        resolver: true
  CoachPaymentByTeam:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.CoachPaymentByTeam
    fields:
      coach:
        resolver: true
      team:
        resolver: true
  CoachPaymentByTraining:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.CoachPaymentByTraining
    fields:
      coach:
        resolver: true
      training:
        resolver: true
  RentPaymentByMonth:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.RentPaymentByMonth
    fields:
      stadium:
        resolver: true
  RentPaymentByTraining:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.RentPaymentByTraining
    fields:
      stadium:
        resolver: true
      trainings:
        resolver: true
  TrainingDay:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.TrainingDay
    fields:
      stadium:
        resolver: true
      team:
        resolver: true
  ClubBalance:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.ClubBalance
  TeamBalance:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.TeamBalance
    fields:
      team:
        resolver: true
  Task:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Task
    fields:
      author:
        resolver: true
      leads:
        resolver: true
      students:
        resolver: true
      workers:
        resolver: true
  Lead:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Lead
    fields:
      nextVisit:
        resolver: true
      students:
        resolver: true
      team:
        resolver: true
  Kit:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Kit
  Cart:
    model: gitlab.com/dinamchiki/go-graphql/graph/model.Cart
    fields:
      kits:
        resolver: true
      student:
        resolver: true
